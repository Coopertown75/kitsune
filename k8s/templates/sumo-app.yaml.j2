apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: {{ kubernetes.app_name }}
    type: {{ kubernetes.apps.web.labels.type }}
  name: {{ kubernetes.apps.web.deployment_name }}
  namespace: {{ kubernetes.namespace }}
spec:
  replicas: {{ kubernetes.apps.web.replicas }}
  selector:
    matchLabels:
      app: {{ kubernetes.app_name }}
      type: {{ kubernetes.apps.web.labels.type }}
  strategy:
    type: RollingUpdate
    rollingUpdate:      
      maxSurge: {{ kubernetes.rollouts.max_surge }}
      maxUnavailable: {{ kubernetes.rollouts.max_unavailable }}
  template:
    metadata:
      labels:
        app: {{ kubernetes.app_name }}
        type: {{ kubernetes.apps.web.labels.type }}
      name: {{ kubernetes.apps.web.deployment_name }}
      namespace: {{ kubernetes.namespace }}
    spec:
      containers:
      - args:
        - {{ kubernetes.apps.web.command }}
        command:
        - /bin/bash
        - -c
        env:
          {%- for name in app|sort -%}
            {% set value = app[name] %}

          - name: {{ name|upper }}
            {% if value == 'SECRET' -%}
            valueFrom:
              secretKeyRef:
                key: {{ name|replace('_', '-') }}
                name: "{{ kubernetes.secrets_name }}"
            {%- else -%}
              value: "{{ value }}"
            {%- endif -%}
          {%- endfor %}

        image: {{ kubernetes.image.repo }}:{{ kubernetes.image.tag }}
        imagePullPolicy: {{ kubernetes.image.pull_policy }}
        name: sumo-{{ kubernetes.target_environment }}-{{ kubernetes.apps.web.labels.type }}
        resources:
          requests:
            cpu: {{ kubernetes.limits.cpu_request }}
            memory: {{ kubernetes.limits.memory_request }}
          limits:
            cpu: {{ kubernetes.limits.cpu_limit }}
            memory: {{ kubernetes.limits.memory_limit }}
      restartPolicy: Always



